<ContentControl
    x:Class="Alien.UI.Views.NotificationsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Global="clr-namespace:Alien.UI.Helpers"
    xmlns:behavior="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:Alien.UI.Views"
    xmlns:locator="clr-namespace:Alien.UI.Locators"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="450"
    d:DesignWidth="1000"
    locator:ViewModelLocator.AutoConnectedViewModelProperty="True"
    mc:Ignorable="d">
    <Grid>

        <Grid.Resources>
            <Global:NotificationMultiValueConverter x:Key="NotificationMultiValueConverter" />
        </Grid.Resources>

        <DataGrid
            x:Name="NotificationsDataGrid"
            Margin="20"
            AlternatingRowBackground="#045228"
            AutoGenerateColumns="False"
            Background="Transparent"
            FontFamily="Arial Black"
            FontSize="15"
            IsReadOnly="True"
            ItemsSource="{Binding Notifications}"
            Opacity="15">

            <DataGrid.Resources>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="FontSize" Value="25" />
                    <Setter Property="FontFamily" Value="Arial Black" />
                    <Setter Property="Margin" Value="10" />
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="HorizontalAlignment" Value="Center" />
                </Style>

                <Style TargetType="{x:Type DataGrid}">
                    <Setter Property="Background" Value="Transparent" />
                </Style>

                <Style TargetType="{x:Type DataGridRow}">
                    <Setter Property="Background" Value="Transparent" />
                </Style>
            </DataGrid.Resources>

            <DataGrid.Columns>
                <DataGridTextColumn
                    Width="*"
                    MinWidth="150"
                    Binding="{Binding PartyName}"
                    Header="PARTIES" />

                <DataGridTextColumn
                    Width="*"
                    MinWidth="150"
                    Binding="{Binding Mode}"
                    Header="MODE" />

                <DataGridTextColumn
                    Width="*"
                    MinWidth="150"
                    Binding="{Binding PartyHost}"
                    Header="HOTE" />

                <DataGridTextColumn
                    Width="*"
                    MinWidth="150"
                    Binding="{Binding SendAt}"
                    Header="TEMPS" />

                <DataGridTemplateColumn Width="auto">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button
                                Width="35"
                                Height="35"
                                Command="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=DataContext.RespondCommand}"
                                Content="V"
                                FontSize="20"
                                FontWeight="Bold"
                                Foreground="ForestGreen">
                                <Button.CommandParameter>
                                    <MultiBinding Converter="{StaticResource NotificationMultiValueConverter}">
                                        <Binding Source="{x:Static Global:NotificationStatusEnum.Accepted}" />
                                        <Binding Path="DataContext.NotificationStatus" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}" />
                                        <Binding Path="DataContext.Id" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}" />
                                    </MultiBinding>
                                </Button.CommandParameter>

                                <behavior:Interaction.Triggers>

                                    <behavior:EventTrigger EventName="Loaded">

                                        <behavior:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=DataContext.CheckChangesCommand}" />
                                    </behavior:EventTrigger>
                                </behavior:Interaction.Triggers>
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Width="auto">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button
                                Width="35"
                                Height="35"
                                Command="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=DataContext.RespondCommand}"
                                Content="X"
                                FontSize="20"
                                FontWeight="Bold"
                                Foreground="Red">
                                <Button.CommandParameter>
                                    <MultiBinding Converter="{StaticResource NotificationMultiValueConverter}">
                                        <Binding Source="{x:Static Global:NotificationStatusEnum.Denied}" />
                                        <Binding Path="DataContext.NotificationStatus" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}" />
                                        <Binding Path="DataContext.Id" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}" />
                                    </MultiBinding>
                                </Button.CommandParameter>

                                <behavior:Interaction.Triggers>

                                    <behavior:EventTrigger EventName="Loaded">

                                        <behavior:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=DataContext.CheckChangesCommand}" />
                                    </behavior:EventTrigger>
                                </behavior:Interaction.Triggers>
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>

        </DataGrid>

        <behavior:Interaction.Triggers>

            <behavior:EventTrigger EventName="Loaded">

                <behavior:InvokeCommandAction Command="{Binding LoadCommand}" />
            </behavior:EventTrigger>
        </behavior:Interaction.Triggers>
    </Grid>
</ContentControl>
