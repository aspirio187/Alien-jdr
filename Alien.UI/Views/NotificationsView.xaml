<ContentControl x:Class="Alien.UI.Views.NotificationsView"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                xmlns:prism="http://prismlibrary.com/"
                xmlns:behavior="http://schemas.microsoft.com/xaml/behaviors"
                xmlns:local="clr-namespace:Alien.UI.Views"
                xmlns:Global="clr-namespace:Alien.UI.Helpers"
                prism:ViewModelLocator.AutoWireViewModel="True"
                mc:Ignorable="d" 
                d:DesignHeight="450" d:DesignWidth="1000">
    <Grid>

        <Grid.Resources>
            <Global:NotificationMultiValueConverter x:Key="NotificationMultiValueConverter" />
        </Grid.Resources>

        <DataGrid x:Name="NotificationsDataGrid" IsReadOnly="True" AutoGenerateColumns="False" Margin="20" ItemsSource="{Binding Notifications}" Background="Transparent" Opacity="15" AlternatingRowBackground="#045228" FontFamily="Arial Black" FontSize="15" >

            <DataGrid.Resources>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="FontSize" Value="25"/>
                    <Setter Property="FontFamily" Value="Arial Black"/>
                    <Setter Property="Margin" Value="10"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                </Style>

                <Style TargetType="{x:Type DataGrid}">
                    <Setter Property="Background" Value="Transparent"/>
                </Style>

                <Style TargetType="{x:Type DataGridRow}">
                    <Setter Property="Background" Value="Transparent"/>
                </Style>
            </DataGrid.Resources>

            <DataGrid.Columns>
                <DataGridTextColumn Header="PARTIES" MinWidth="150" Width="*" Binding="{Binding PartyName}"/>

                <DataGridTextColumn Header="MODE" MinWidth="150" Width="*" Binding="{Binding Mode}"/>

                <DataGridTextColumn Header="HOTE" MinWidth="150" Width="*" Binding="{Binding PartyHost}" />

                <DataGridTextColumn Header="TEMPS" MinWidth="150" Width="*" Binding="{Binding SendAt}" />

                <DataGridTemplateColumn Width="auto" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Content="V" FontWeight="Bold" Width="35" Height="35" FontSize="20" Foreground="ForestGreen"
                                    Command="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=DataContext.RespondCommand}">
                                <Button.CommandParameter>
                                    <MultiBinding Converter="{StaticResource NotificationMultiValueConverter}">
                                        <Binding Source="{x:Static Global:NotificationStatusEnum.Accepted}"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}" Path="DataContext.NotificationStatus" />
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}" Path="DataContext.Id" />
                                    </MultiBinding>
                                </Button.CommandParameter>

                                <behavior:Interaction.Triggers>

                                    <behavior:EventTrigger EventName="Loaded">

                                        <prism:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=DataGrid},Path=DataContext.CheckChangesCommand}"/>
                                    </behavior:EventTrigger>
                                </behavior:Interaction.Triggers>
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Width="auto">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Content="X" FontWeight="Bold" FontSize="20" Width="35" Height="35" Foreground="Red"
                                    Command="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, Path=DataContext.RespondCommand}">
                                <Button.CommandParameter>
                                    <MultiBinding Converter="{StaticResource NotificationMultiValueConverter}">
                                        <Binding Source="{x:Static Global:NotificationStatusEnum.Denied}"/>
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}" Path="DataContext.NotificationStatus" />
                                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}" Path="DataContext.Id" />
                                    </MultiBinding>
                                </Button.CommandParameter>

                                <behavior:Interaction.Triggers>

                                    <behavior:EventTrigger EventName="Loaded">

                                        <prism:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=DataGrid},Path=DataContext.CheckChangesCommand}"/>
                                    </behavior:EventTrigger>
                                </behavior:Interaction.Triggers>
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>

        </DataGrid>

        <behavior:Interaction.Triggers>

            <behavior:EventTrigger EventName="Loaded">

                <prism:InvokeCommandAction Command="{Binding LoadCommand}"/>
            </behavior:EventTrigger>
        </behavior:Interaction.Triggers>
    </Grid>
</ContentControl>
